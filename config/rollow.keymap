/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define MAIN    0
#define NAV     1
#define SYM     2
#define SPECIAL 3


#define LAUNCHER (LG(TAB))
#define CTRL_TAB (LC(TAB))
#define C_S_TAB (LC(LS(TAB)))
#define SCRNSHOT (LG(LS(S)))

#define SPC_PREVIOUS (LC(LG(LEFT)))
#define S_PRV SPC_PREVIOUS

#define SPC_NEXT (LC(LG(RIGHT)))
#define S_NXT SPC_NEXT

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&sk {
  quick-release;
};

 /{
  #include "36key_combos.dtsi"
  
  chosen {
    zmk,battery = &vbatt;
    zmk,matrix_transform = &five_column_transform;
  };

  vbatt: vbatt {
      compatible = "zmk,battery-nrf-vddh";
      label = "VBATT";
  };

//  conditional_layers {
//      compatible = "zmk,conditional-layers";
//      tri_layer {
//          if-layers = <NAV SYMBOLS>;
//          then-layer = <NUMBERS>;
//      };
//  };

  keymap {
      compatible = "zmk,keymap";

/* Default
 * -----------------------------------.                    .-----------------------------------
 * |   Q  |   W  |   E  |   R  |   T  |                    |   Y  |   U  |   I  |   O  |   P  |
 * +------+------+------+------+------|                    |------+------+------+------+------+
 * |   A  |   S  |   D  |   F  |   G  |                    |   H  |   J  |   K  |   L  |   ;  |
 * +------+------+------+------+------|                    |------+------+------+------+------+
 * |   Z  |   X  |   C  |   V  |   B  |-------.    .-------|   N  |   M  |   ,  |   .  |   /  |
 * -----------------------------------/       /     \      \-----------------------------------
 *                   |      |      | /       /       \      \  |      |      |
 *                   |      |      |/       /         \      \ |      |      |
 *                   '-------------''------'           '------''-------------'
 *
 *   Encoder Left: Up <-> Down
 *   Encoder Right: Left <-> Right
 */
                MAIN {
        bindings = <
            &kp Q      &kp W      &kp E       &kp R        &kp T                &kp Y     &kp U        &kp I           &kp O        &kp P
            &kp A      &kp S      &kp D       &kp F        &kp G                &kp H     &kp J        &kp K           &kp L        &kp SEMI      
            &kp Z      &kp X      &kp C       &kp V        &kp B                &kp N     &kp M        &kp COMMA       &kp DOT      &kp FSLH
                          &kp K_PLAY_PAUSE   &mo NAV    &mt LSHIFT BSPC     &kp SPACE &mo SYM  &mo SYM
            >;
                        sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };
                NAV {
                        bindings = <
          &none    &none       &none     &none      &none               &kp HOME     &kp PG_DN    &kp PG_UP  &kp END       &none
          &none    &none       &none     &none      &none               &kp LEFT     &kp DOWN     &kp UP     &kp RIGHT     &none
          &kp LGUI &kp LALT    &kp LCTRL &kp LSHIFT &none               &kp LC(LEFT) &kp LC(DOWN) &kp LC(UP) &kp LC(RIGHT) &none        
                                      &trans       &trans  &trans   &trans  &mo SPECIAL   &trans
                            >;

                            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp RIGHT LEFT>;
                };
                SYM {
                        bindings = <
      &kp LPAR  &kp AMPS  &kp STAR   &kp TILDE  &kp RBRC                  &kp EQUAL  &kp N7 &kp N8 &kp N9 &kp DOT
      &kp LBRC  &kp EXCL  &kp AT     &kp HASH   &kp RPAR                  &kp PLUS   &kp N1 &kp N2 &kp N3 &kp N0
      &kp LBKT  &kp DLLR  &kp PRCNT  &kp CARET  &kp RBKT                  &kp PIPE   &kp N4 &kp N5 &kp N6 &kp BSLH 
                                  &trans       &mo SPECIAL     &trans    &trans &trans   &trans
                        >;
   
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
                };

                SPECIAL {
                        bindings = <
//      &bootloader  &sys_reset   &none        &to   APT326 &to     BASE                   &out OUT_USB &out OUT_BLE &none        &sys_reset   &bootloader
//      &none        &kp   C_MUTE &kp C_VOL_DN &kp C_VOL_UP &to    APTHD                   &bt   BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3
//      &none        &kp     C_PP &kp C_BRI_DN &kp C_BRI_UP &to     GAME                   &none        &none        &none        &none        &none


                &bootloader  &none        &none        &none        &none                &none  &kp F7  &kp F8 &kp F9 &kp F12
                &none        &none        &none        &none        &none                &none  &kp F1  &kp F2 &kp F3 &kp F10
                &kp LGUI     &kp LALT     &kp LCTRL    &kp LSHIFT   &none                &none  &kp F4  &kp F5 &kp F6 &kp F11
                                             &trans       &trans       &trans    &trans  &trans       &trans
                        >;
   
                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RIGHT LEFT>;
                };
        };
};
